<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:hdp="http://www.springframework.org/schema/hadoop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">
    
    
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxTotal="${redis.pool.maxTotal}"
          p:maxIdle="${redis.pool.maxIdle}"
          p:maxWaitMillis="${redis.pool.maxWaitMillis}"
          p:minEvictableIdleTimeMillis="${redis.pool.minEvictableIdleTimeMillis}"
          p:numTestsPerEvictionRun="${redis.pool.numTestsPerEvictionRun}"
          p:timeBetweenEvictionRunsMillis="${redis.pool.timeBetweenEvictionRunsMillis}"
          p:blockWhenExhausted="${redis.pool.blockWhenExhausted}" />
	
	<!-- 单机版  开始-->
	<!-- 配置redis 缓存服务器 -->
	<!--  
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="${redis.host}" p:port="${redis.port}" p:poolConfig-ref="poolConfig" />
	-->
	<!-- 单机版  结束-->	
	
	
	<!-- sentinel版  开始-->
	 
	<bean id="rcc" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="mymaster"></property>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="127.0.0.1"></constructor-arg> 
                    <constructor-arg name="port" value="26001"></constructor-arg>                   
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="26002"/>               
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">                   
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="26003"/>               
                </bean>
            </set>
        </property>
    </bean>
    
	
	<!-- sentinel版  结束-->
	

    <!-- 集群版  开始-->
    <!-- 
    <bean id="rcc" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="maxRedirects" value="3"></property>
		<property name="clusterNodes">
	        <set>
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">
	                <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
	                <constructor-arg name="port" value="7000"></constructor-arg>
	            </bean>
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">
	                <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
	                <constructor-arg name="port" value="7001"></constructor-arg>
	            </bean>
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">
	                <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
	                <constructor-arg name="port" value="7002"></constructor-arg>
	            </bean>
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">
	                <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
	                <constructor-arg name="port" value="7003"></constructor-arg>
	            </bean>
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">
	                <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
	                <constructor-arg name="port" value="7004"></constructor-arg>
	            </bean>
	            <bean class="org.springframework.data.redis.connection.RedisClusterNode">
	                <constructor-arg name="host" value="127.0.0.1"></constructor-arg>
	                <constructor-arg name="port" value="7005"></constructor-arg>
	            </bean>
	        </set>
        </property>
	</bean>
    -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  >
		<!--  
		<constructor-arg ref="rcc" />
		<constructor-arg ref="jedisPoolConfig" />-->
		<constructor-arg name="sentinelConfig" ref="rcc"></constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
	</bean>
	
	<!-- 集群版  结束-->

	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	<!-- redis操作模板 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory"   
          p:keySerializer-ref="stringRedisSerializer"
          p:hashKeySerializer-ref="stringRedisSerializer" />
          <!--p:keySerializer="org.springframework.data.redis.serializer.StringRedisSerializer"-->
          <!--p:valueSerializer="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"-->
          
    <bean id="topcMessageListener" class="com.pas.cloud.redis.TopicMessageListener">
		<property name="redisTemplate" ref="redisTemplate"></property>
	</bean>
          
    <bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer" destroy-method="destroy">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
		<property name="taskExecutor"><!-- 此处有个奇怪的问题，无法正确使用其他类型的Executor -->
			<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
				<property name="poolSize" value="3"></property>
			</bean>
		</property>
		<property name="messageListeners">
			<map>
				<entry key-ref="topcMessageListener">
					<bean class="org.springframework.data.redis.listener.ChannelTopic">
						<constructor-arg value="user:topic"/>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory" />
    
    
    
	
	
	<!--  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref="redisTemplate"/>
            </set>
        </property>
    </bean>-->
    
    
    
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
          c:_0-ref="redisTemplate"/> 
          
    <cache:annotation-driven cache-manager="cacheManager"/>
	
</beans>



