<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
       http://www.dangdang.com/schema/ddframe/rdb 
       http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

	<!-- sharing jdbc -->
	<bean name="dataSource_0" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${db1.url}" />
		<property name="username" value="${db1.username}" />
		<property name="password" value="${db1.password}" />

		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="60000" />

		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
	</bean>
	<bean name="dataSource_1" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${db2.url}" />
		<property name="username" value="${db2.username}" />
		<property name="password" value="${db2.password}" />

		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="60000" />

		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
	</bean>
	
	<!-- 配置多数据源映射关系 -->
    <bean id="dataSource" class="com.pas.cloud.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="dataSource_0" value-ref="dataSource_0"></entry>
                <entry key="dataSource_1" value-ref="dataSource_1"></entry>
            </map>
        </property>
    <!-- 默认目标数据源为你主库数据源 -->
        <property name="defaultTargetDataSource" ref="dataSource_0"/>
    </bean>

    <!-- 
	<rdb:strategy id="databaseStrategy" sharding-columns="userId" 
	    algorithm-expression="dataSource_${userId.longValue() % 2}"/>

     

	<rdb:data-source id="shardingDataSource">
		<rdb:sharding-rule data-sources="dataSource_0,dataSource_1" >
			<rdb:table-rules>
				<rdb:table-rule logic-table="t_user" actual-tables="t_user"
					database-strategy="databaseStrategy" />
			</rdb:table-rules>
			<rdb:default-database-strategy
				sharding-columns="none"
				algorithm-class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.NoneDatabaseShardingAlgorithm" />
			<rdb:default-table-strategy
				sharding-columns="none"
				algorithm-class="com.dangdang.ddframe.rdb.sharding.api.strategy.table.NoneTableShardingAlgorithm" />
		</rdb:sharding-rule>
		<rdb:props>
			<prop key="metrics.enable">false</prop>
		</rdb:props>
	</rdb:data-source>
	
	-->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath*:com/pas/cloud/**/mapping/*Mapper.xml" />
		<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
	</bean>
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pas.cloud.**.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 
	<aop:config>
		<aop:pointcut id="routerDataSource"
			expression="execution(* com.pas.cloud.service.**.*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
		    advice-ref="exchangeDataSource" />
		
	</aop:config>
	-->
	
	
    <!--  
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />

			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	-->
	<!-- 
	<bean id="exchangeDataSource" class="com.pas.cloud.datasource.ExchangeDataSource" /> -->
	<!--  
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.pas.cloud.**.dao.*Dao.*(..))" />
		
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice"  /> 

	</aop:config>
    -->
    
    <bean id="transactionRepository"
      class="com.pas.cloud.transaction.spring.repository.SpringJdbcTransactionRepository">
    <property name="dataSource" ref="dataSource"/>
</bean>

</beans>



